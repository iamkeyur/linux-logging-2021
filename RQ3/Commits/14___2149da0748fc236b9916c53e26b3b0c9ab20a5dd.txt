['2149da0748fc236b9916c53e26b3b0c9ab20a5dd', '987.txt', 'AddInfo']
commit 2149da0748fc236b9916c53e26b3b0c9ab20a5dd
Author: Balbir Singh <sblbir@amzn.com>
Date:   Tue Oct 30 02:40:15 2018 +0000

    block: add cmd_flags to print_req_error
    
    I ran into a bug where after hibernation due to incompatible
    backends, the block driver returned BLK_STS_NOTSUPP, with the
    current message it's hard to find out what the command flags
    were. Adding req->cmd_flags help make the problem easier to
    diagnose.
    
    Reviewed-by: Eduardo Valentin <eduval@amazon.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Balbir Singh <sblbir@amzn.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/block/blk-core.c b/block/blk-core.c
index 3f6f5e6c2fe4..a1a5e1c14898 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -173,10 +173,11 @@ static void print_req_error(struct request *req, blk_status_t status)
 	if (WARN_ON_ONCE(idx >= ARRAY_SIZE(blk_errors)))
 		return;
 
-	printk_ratelimited(KERN_ERR "%s: %s error, dev %s, sector %llu\n",
-			   __func__, blk_errors[idx].name, req->rq_disk ?
-			   req->rq_disk->disk_name : "?",
-			   (unsigned long long)blk_rq_pos(req));
+	printk_ratelimited(KERN_ERR "%s: %s error, dev %s, sector %llu flags %x\n",
+				__func__, blk_errors[idx].name,
+				req->rq_disk ?  req->rq_disk->disk_name : "?",
+				(unsigned long long)blk_rq_pos(req),
+				req->cmd_flags);
 }
 
 static void req_bio_endio(struct request *rq, struct bio *bio,
