['248fbcd5aee00f6519a12c5ed3bc3dc0f5e84de5', '104.txt', 'ModernizeLog']
commit 248fbcd5aee00f6519a12c5ed3bc3dc0f5e84de5
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Fri Aug 7 09:36:55 2015 +0100

    x86/efi-bgrt: Switch pr_err() to pr_debug() for invalid BGRT
    
    It's totally legitimate, per the ACPI spec, for the firmware to
    set the BGRT 'status' field to zero to indicate that the BGRT
    image isn't being displayed, and we shouldn't be printing an
    error message in that case because it's just noise for users. So
    swap pr_err() for pr_debug().
    
    However, Josh points that out it still makes sense to test the
    validity of the upper 7 bits of the 'status' field, since
    they're marked as "reserved" in the spec and must be zero. If
    firmware violates this it really *is* an error.
    
    Reported-by: Tom Yan <tom.ty89@gmail.com>
    Tested-by: Tom Yan <tom.ty89@gmail.com>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1438936621-5215-2-git-send-email-matt@codeblueprint.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/platform/efi/efi-bgrt.c b/arch/x86/platform/efi/efi-bgrt.c
index d7f997f7c26d..ea48449b2e63 100644
--- a/arch/x86/platform/efi/efi-bgrt.c
+++ b/arch/x86/platform/efi/efi-bgrt.c
@@ -50,11 +50,16 @@ void __init efi_bgrt_init(void)
 		       bgrt_tab->version);
 		return;
 	}
-	if (bgrt_tab->status != 1) {
-		pr_err("Ignoring BGRT: invalid status %u (expected 1)\n",
+	if (bgrt_tab->status & 0xfe) {
+		pr_err("Ignoring BGRT: reserved status bits are non-zero %u\n",
 		       bgrt_tab->status);
 		return;
 	}
+	if (bgrt_tab->status != 1) {
+		pr_debug("Ignoring BGRT: invalid status %u (expected 1)\n",
+			 bgrt_tab->status);
+		return;
+	}
 	if (bgrt_tab->image_type != 0) {
 		pr_err("Ignoring BGRT: invalid image type %u (expected 0)\n",
 		       bgrt_tab->image_type);
