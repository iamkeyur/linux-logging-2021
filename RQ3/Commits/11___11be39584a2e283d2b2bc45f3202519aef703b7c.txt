['11be39584a2e283d2b2bc45f3202519aef703b7c', '990.txt', 'AddInfo']
commit 11be39584a2e283d2b2bc45f3202519aef703b7c
Author: Breno Leitao <leitao@debian.org>
Date:   Mon Nov 26 18:11:59 2018 -0200

    powerpc/tm: Print scratch value
    
    Usually a TM Bad Thing exception is raised due to three different problems.
    a) touching SPRs in an active transaction; b) using TM instruction with the
    facility disabled and c) setting a wrong MSR/SRR1 at RFID.
    
    The two initial cases are easy to identify by looking at the instructions.
    The latter case is harder, because the MSR is masked after RFID, so, it is
    very useful to look at the previous MSR (SRR1) before RFID as also the
    current and masked MSR.
    
    Since MSR is saved at paca just before RFID, this patch prints it if a TM
    Bad thing happen, helping to understand what is the invalid TM transition
    that is causing the exception.
    
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/kernel/traps.c b/arch/powerpc/kernel/traps.c
index 9a86572db1ef..00af2c4febf4 100644
--- a/arch/powerpc/kernel/traps.c
+++ b/arch/powerpc/kernel/traps.c
@@ -1434,7 +1434,8 @@ void program_check_exception(struct pt_regs *regs)
 			goto bail;
 		} else {
 			printk(KERN_EMERG "Unexpected TM Bad Thing exception "
-			       "at %lx (msr 0x%lx)\n", regs->nip, regs->msr);
+			       "at %lx (msr 0x%lx) tm_scratch=%llx\n",
+			       regs->nip, regs->msr, get_paca()->tm_scratch);
 			die("Unrecoverable exception", regs, SIGABRT);
 		}
 	}
